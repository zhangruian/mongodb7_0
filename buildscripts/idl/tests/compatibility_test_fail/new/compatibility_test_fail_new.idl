# Copyright (C) 2021-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/idl/basic_types.idl"
    - "../buildscripts/idl/tests/compatibility_test_fail/new/imports.idl"

types:
    intToIntString:
        bson_serialization_type:
                                - int
                                - string
        description: "The bson_serialization_type changes from int in the old command's reply
                      field type to [int, string] in the new command's reply field type"
        cpp_type: "std::int32_t"
    
    intStringToIntStringBool:
        bson_serialization_type:
                                - int
                                - string
                                - bool
        description: "The bson_serialization_type changes from [int, string] in the old command's
                      reply field type to [int, string, bool] in the new command's reply field
                      type"
        cpp_type: "std::int32_t"

    oldBsonSerializationTypeAny:
        bson_serialization_type:
                                - int
        description: "The old bson_serialization_type contains 'any'"
        cpp_type: "std::int32_t"
    
    newBsonSerializationTypeAny:
        bson_serialization_type:
                                - int
                                - any
        description: "The new bson_serialization_type contains 'any'"
        cpp_type: "std::int32_t"

    intStringBoolToIntString:
        bson_serialization_type:
                                - int
                                - string
        description: "The bson_serialization_type changes from [int, string, bool] in the old
                      command's reply field type to [int, string] in the new command's reply
                      field type"
        cpp_type: "std::int32_t"

    intStringToInt:
        bson_serialization_type:
                                - int
        description: "The bson_serialization_type changes from [int, string] in the old command
                      parameter's type to [int] in the new command parameter's type"
        cpp_type: "std::int32_t"

enums:
    NewReplyFieldEnumNotSubset:
        description: "The new reply type is an enum that is not a subset of the old reply type's 
                      enum values"
        type: string
        values:
            valueOne: "one"
            valueTwo: "two"
            valueThree: "three"

    EnumNotSuperset:
        description: "The new enum is not a superset of the old enum values"
        type: string
        values:
            valueOne: "one"
            valueTwo: "two"

structs:
    StructCommandParameterType:
        description: "This is a struct command parameter type"

    UnstableNewFieldReply:
        description: "This reply contains a field that is stable in the old command but is
                      unstable in the new command."
        fields:
            unstableNewField:
                type: string
                unstable: true
    
    OptionalNewFieldReply:
        description: "This reply contains a field that is required in the old command but is
                      optional in the new command."
        fields:
            optionalNewField:
                type: string
                optional: true
    
    MissingNewFieldReply:
        description: "This reply contains a field that exists in the old command but is
                      missing in the new command."
    
    RequiredNewField:
        description: "This struct contains a field that is optional in the old command but is
                      required in the new command."
        fields:
            requiredNewField:
                type: string

    EnumNotSubsetReply:
        description: "This reply contains an enum field where the new enum values is not a subset
                      of the old reply type's enum values"
        fields:
            enumNotSubsetReplyField:
                type: NewReplyFieldEnumNotSubset

    NotEnumFieldReply:
        description: "This reply contains a field that is an enum type in the old command but
                      is not an enum type in the new command"
        fields:
            notEnumReplyField:
                type: string

    NotStructFieldReply:
        description: "This reply contains a field that is a struct type in the old command but
                      is not a struct type in the new command"
        fields:
            notStructReplyField:
                type: string

    EnumOrStructFieldReply:
        description: "This reply contains a field that is a non-enum or struct type in the old
                      command but is an enum or struct in the new command"
        fields:
            EnumOrStructReplyField:
                type: NewReplyFieldEnumNotSubset

    BsonNotSubsetReply:
        description: "This reply contains a field type where the new bson_serialization_type
                      is not a subset of the old bson_serialization_type"
        fields:
            bsonNotSubsetReplyField:
                type: intToIntString

    BsonNotSubsetReplyTwo:
        description: "This reply contains a field type where the new bson_serialization_type
                      is not a subset of the old bson_serialization_type"
        fields:
            bsonNotSubsetReplyFieldTwo:
                type: intStringToIntStringBool

    OldBsonSerializationTypeAnyReply:
        description: "This reply contains a field whose old type has a bson_serialization_type
                      that contains 'any'"
        fields:
            oldBsonSerializationTypeAnyReplyField:
                type: oldBsonSerializationTypeAny

    NewBsonSerializationTypeAnyReply:
        description: "This reply contains a field whose new type has a bson_serialization_type
                      that contains 'any'"
        fields:
            newBsonSerializationTypeAnyReplyField:
                type: newBsonSerializationTypeAny

    StructFieldTypeRecursiveReplyOne:
        description: "This reply contains a field whose new type is a struct that is not 
                      compatible with the old field type"
        fields:
            structReplyField:
                type: UnstableNewFieldReply
    
    StructFieldTypeRecursiveReplyTwo:
        description: "This reply contains a field whose new type is a struct that is not 
                      compatible with the old field type"
        fields:
            structReplyField:
                type: StructType

    StructType:
        description: "This struct contains a field whose new type is incompatible with the 
                      old field type"
        fields:
            fieldOne:
                type: BsonNotSubsetReply
    
    NewVariantTypeReply:
        description: "This reply contains a new field that has a variant type while the old field
                      is not a variant type"
        fields:
            newVariantTypeReplyField:
                type: 
                    variant: [int, string]

    NewVariantNotSubsetReply:
        description: "This reply contains a field whose new variant types are not a subset
                      of the old variant types"
        fields:
            variantNotSubsetReplyField:
                type: 
                    variant: [int, bool, string]
    
    VariantRecursiveReply:
        description: "This reply contains a field that has a new variant type that is not
                      compatible with the old variant type"
        fields:
            variantRecursiveReplyField:
                type: 
                    variant: [int, intStringToIntStringBool]
    
    NewVariantStructNotSubsetReply:
        description: "This reply contains a field whose new variant types are not a subset
                      of the old variant types"
        fields:
            variantStructNotSubsetReplyField:
                type: 
                    variant: [int, string, StructType]
    
    VariantStructRecursiveReply:
        description: "This reply contains a field that has a new variant struct type that is not
                      compatible with the old variant struct type"
        fields:
            variantStructRecursiveReplyField:
                type: 
                    variant: [int, StructFieldTypeRecursiveReplyTwo]

    NewCommandTypeValidatorStruct:
        description: "This struct contains a field where the new version contains a validator while
                      the old version does not"
        fields:
            newCommandTypeValidatorField:
                type: int
                validator:
                    lt: 0

    CommandTypeValidatorsNotEqualStruct:
        description: "This struct contains a field where the new and old validators are not exactly equal"
        fields:
            commandTypeValidatorsNotEqualField:
                type: double
                validator:
                    lt: 0.0
                    gt: -1.1
                    lte: 2.0
                    gte: -2.98
                    callback: "callback"

    AddedRequiredTypeFieldStruct:
        description: "This struct contains a field that is added and required in the new version."
        fields:
            addedRequiredTypeField:
                type: string

    StableRequiredTypeFieldStruct:
        description: "This struct contains a field that is stable and required in the new version
                      that was unstable in the old version"
        fields:
            stableRequiredTypeField:
                type: string

commands:
    invalidAPIVersionNew:
        description: "new command fails because of invalid API version"
        command_name: invalidAPIVersionNew
        namespace: ignored
        cpp_name: invalidAPIVersionNew
        strict: true
        api_version: "whatever"
        reply_type: OkReply

    duplicateCommandNew:
        description: "duplicate command in new commands fails because a command with the same name
                      is in duplicate_command_fail_new.idl"
        command_name: duplicateCommandNew
        namespace: ignored
        cpp_name: duplicateCommandNew
        strict: true
        api_version: "1"
        reply_type: OkReply

    invalidAPIVersionOld:
        description: "old version of this command in compatibility_test_fail_old.idl fails because
                      of invalid API version"
        command_name: invalidAPIVersionOld
        namespace: ignored
        cpp_name: invalidAPIVersionOld
        strict: true
        api_version: "1"
        reply_type: OkReply

    duplicateCommandOld:
        description: "old version of this command in compatibility_test_fail_old.idl fails because
                      a command with the same name is in duplicate_command_fail_old.idl"
        command_name: duplicateCommandOld
        namespace: ignored
        cpp_name: duplicateCommandOld
        strict: true
        api_version: "1"
        reply_type: OkReply
    
    removedCommandParameter:
        description: "parameter will be removed from command in compatibility_test_fail/new
                      which results in an error"
        command_name: removedCommandParameter
        namespace: ignored
        cpp_name: removedCommandParameter
        strict: true
        api_version: "1"
        reply_type: OkReply

    addedNewCommandParameterRequired:
        description: "new command parameter fails because it is required when
                      it should be optional"
        command_name: addedNewCommandParameterRequired
        namespace: ignored
        cpp_name: addedNewCommandParameterRequired
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newRequiredParam:
                type: string

    commandParameterUnstable:
        description: "new unstable command parameter fails because it is stable
                      in the corresponding old command"
        command_name: commandParameterUnstable
        namespace: ignored
        cpp_name: commandParameterUnstable
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newUnstableParameter:
                type: string
                unstable: true

    commandParameterStableRequired:
        description: "new required stable command parameter fails because it is unstable
                      in the corresponding old command"
        command_name: commandParameterStableRequired
        namespace: ignored
        cpp_name: commandParameterStableRequired
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newRequiredStableParam:
                type: string

    commandParameterRequired:
        description: "new required command parameter fails because it is optional
                      in the corresponding old command"
        command_name: commandParameterRequired
        namespace: ignored
        cpp_name: commandParameterRequired
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newRequiredParam:
                type: string
                optional: false

    oldCommandParameterTypeBsonSerializationAny:
        description: "old command fails because it has a parameter type that has a
                      bson_serialization_type that contains 'any'"
        command_name: oldCommandParameterTypeBsonSerializationAny
        namespace: ignored
        cpp_name: oldCommandParameterTypeBsonSerializationAny
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            bsonTypeAnyParam:
                type: oldBsonSerializationTypeAny

    newCommandParameterTypeBsonSerializationAny:
        description: "new command fails because it has a parameter type that has a
                      bson_serialization_type that contains 'any'"
        command_name: newCommandParameterTypeBsonSerializationAny
        namespace: ignored
        cpp_name: newCommandParameterTypeBsonSerializationAny
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            bsonTypeAnyParam:
                type: newBsonSerializationTypeAny

    newCommandParameterTypeEnumNotSuperset:
        description: "new command fails because its parameter type is an enum that is not
                      a superset of the corresponding old parameter type's enum values"
        command_name: newCommandParameterTypeEnumNotSuperset
        namespace: ignored
        cpp_name: newCommandParameterTypeEnumNotSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            enumNotSupersetParam:
                type: EnumNotSuperset

    newCommandParameterTypeNotEnum:
        description: "new command fails because its parameter type is not an enum when the
                      old command parameter type is an enum"
        command_name: newCommandParameterTypeNotEnum
        namespace: ignored
        cpp_name: newCommandParameterTypeNotEnum
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newParamNotEnum:
                type: string

    newCommandParameterTypeNotStruct:
        description: "new command fails because its parameter type is not a struct when the
                      old command parameter type is a struct"
        command_name: newCommandParameterTypeNotStruct
        namespace: ignored
        cpp_name: newCommandParameterTypeNotStruct
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newParamNotStruct:
                type: string

    newCommandParameterTypeEnumOrStructOne:
        description: "new command fails because its parameter type is an enum while the
                      parameter type in the old command is an non-enum or non-struct"
        command_name: newCommandParameterTypeEnumOrStructOne
        namespace: ignored
        cpp_name: newCommandParameterTypeEnumOrStructOne
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newParamEnum:
                type: EnumNotSuperset

    newCommandParameterTypeEnumOrStructTwo:
        description: "new command fails because its parameter type is a struct while the
                      parameter type in the old command is an non-enum or non-struct"
        command_name: newCommandParameterTypeEnumOrStructTwo
        namespace: ignored
        cpp_name: newCommandParameterTypeEnumOrStructTwo
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newParamStruct:
                type: StructCommandParameterType

    newCommandParameterTypeBsonNotSuperset:
        description: "new command fails because its parameter type has a bson_serialization_type
                      that is not a superset of the corresponding old command parameter type's
                      bson_serialization_type"
        command_name: newCommandParameterTypeBsonNotSuperset
        namespace: ignored
        cpp_name: newCommandParameterTypeBsonNotSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newParamBsonNotSuperset:
                type: intStringToInt

    newCommandParameterValidator:
        description: "new command fails because it contains a parameter that contains a validator
                      that is not present in the old parameter"
        command_name: newCommandParameterValidator
        namespace: ignored
        cpp_name: newCommandParameterValidator
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newParam:
                type: int
                validator:
                    lt: 0

    commandParameterValidatorsNotEqual:
        description: "new command fails because it contains a parameter that contains a validator
                      that is not exactly equal to the old parameter validator"
        command_name: commandParameterValidatorsNotEqual
        namespace: ignored
        cpp_name: commandParameterValidatorsNotEqual
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newParam:
                type: double
                validator:
                    lt: 0.0
                    gt: -1.1
                    lte: 2.0
                    gte: -2.98
                    callback: "callback"

    newCommandTypeValidator:
        description: "new command fails because it contains a type that contains a validator
                      that is not present in the old type"
        command_name: newCommandTypeValidator
        namespace: type
        type: NewCommandTypeValidatorStruct
        cpp_name: newCommandTypeValidator
        strict: true
        api_version: "1"
        reply_type: OkReply

    commandTypeValidatorsNotEqual:
        description: "new command fails because it contains a type that contains a validator
                      that is not exactly equal to the old type validator"
        command_name: commandTypeValidatorsNotEqual
        namespace: type
        type: CommandTypeValidatorsNotEqualStruct
        cpp_name: commandTypeValidatorsNotEqual
        strict: true
        api_version: "1"
        reply_type: OkReply

    newReplyFieldUnstable:
        description: "new command fails because it contains an unstable reply field that is stable
                      in the corresponding old command"
        command_name: newReplyFieldUnstable
        namespace: ignored
        cpp_name: newReplyFieldUnstable
        strict: true
        api_version: "1"
        reply_type: UnstableNewFieldReply
    
    newReplyFieldOptional:
        description: "new command fails because it contains an optional reply field that is
                      required in the corresponding old command"
        command_name: newReplyFieldOptional
        namespace: ignored
        cpp_name: newReplyFieldOptional
        strict: true
        api_version: "1"
        reply_type: OptionalNewFieldReply

    newReplyFieldMissing:
        description: "new command fails because it is missing a reply field that exists in
                      the corresponding old command"
        command_name: newReplyFieldMissing
        namespace: ignored
        cpp_name: newReplyFieldMissing
        strict: true
        api_version: "1"
        reply_type: MissingNewFieldReply

    importedReplyCommand:
        description: "reply is imported and should fail"
        command_name: importedReplyCommand
        namespace: ignored
        cpp_name: importedReplyCommand
        strict: true
        api_version: "1"
        reply_type: ImportedUnstableNewFieldReply

    newReplyFieldTypeEnumNotSubset:
        description: "new command fails because its reply field type is an enum that is not
                      a subset of the corresponding old reply field type's enum values"
        command_name: newReplyFieldTypeEnumNotSubset
        namespace: ignored
        cpp_name: newReplyFieldTypeEnumNotSubset
        strict: true
        api_version: "1"
        reply_type: EnumNotSubsetReply

    newReplyFieldTypeNotEnum:
        description: "new command fails because its reply field type is not an enum when the
                      old reply field type is an enum"
        command_name: newReplyFieldTypeNotEnum
        namespace: ignored
        cpp_name: newReplyFieldTypeNotEnum
        strict: true
        api_version: "1"
        reply_type: NotEnumFieldReply

    newReplyFieldTypeNotStruct:
        description: "new command fails because its reply field type is not a struct when the
                      old reply field type is a struct"
        command_name: newReplyFieldTypeNotStruct
        namespace: ignored
        cpp_name: newReplyFieldTypeNotStruct
        strict: true
        api_version: "1"
        reply_type: NotStructFieldReply

    newReplyFieldTypeEnumOrStruct:
        description: "new command fails because it contains a field that is a non-enum or struct
                      type in the old command, and an enum or struct in the new command"
        command_name: newReplyFieldTypeEnumOrStruct
        namespace: ignored
        cpp_name: newReplyFieldTypeEnumOrStruct
        strict: true
        api_version: "1"
        reply_type: EnumOrStructFieldReply

    newReplyFieldTypeBsonNotSubset:
        description: "new command fails because its reply field type has a bson_serialization_type
                      that is not a subset of the corresponding old reply field type's
                      bson_serialization_type"
        command_name: newReplyFieldTypeBsonNotSubset
        namespace: ignored
        cpp_name: newReplyFieldTypeBsonNotSubset
        strict: true
        api_version: "1"
        reply_type: BsonNotSubsetReply

    newReplyFieldTypeBsonNotSubsetTwo:
        description: "new command fails because its reply field type has a bson_serialization_type
                      that is not a subset of the corresponding old reply field type's
                      bson_serialization_type"
        command_name: newReplyFieldTypeBsonNotSubsetTwo
        namespace: ignored
        cpp_name: newReplyFieldTypeBsonNotSubsetTwo
        strict: true
        api_version: "1"
        reply_type: BsonNotSubsetReplyTwo

    oldReplyFieldTypeBsonAny:
        description: "old command fails because its reply field type has a bson_serialization_type
                      that contains 'any'"
        command_name: oldReplyFieldTypeBsonAny
        namespace: ignored
        cpp_name: oldReplyFieldTypeBsonAny
        strict: true
        api_version: "1"
        reply_type: OldBsonSerializationTypeAnyReply

    newReplyFieldTypeBsonAny:
        description: "new command fails because its reply field type has a bson_serialization_type
                      that contains 'any'"
        command_name: newReplyFieldTypeBsonAny
        namespace: ignored
        cpp_name: newReplyFieldTypeBsonAny
        strict: true
        api_version: "1"
        reply_type: NewBsonSerializationTypeAnyReply

    newReplyFieldTypeStructRecursiveOne:
        description: "new command fails because its reply field type is a struct that is
                      incompatible with the old reply field type struct"
        command_name: newReplyFieldTypeStructRecursiveOne
        namespace: ignored
        cpp_name: newReplyFieldTypeStructRecursiveOne
        strict: true
        api_version: "1"
        reply_type: StructFieldTypeRecursiveReplyOne

    newReplyFieldTypeStructRecursiveTwo:
        description: "new command fails because its reply field type is a struct that is
                      incompatible with the old reply field type struct"
        command_name: newReplyFieldTypeStructRecursiveTwo
        namespace: ignored
        cpp_name: newReplyFieldTypeStructRecursiveTwo
        strict: true
        api_version: "1"
        reply_type: StructFieldTypeRecursiveReplyTwo

    newNamespaceNotIgnored:
        description: "new command fails because its namespace is not ignored"
        command_name: newNamespaceNotIgnored
        namespace: concatenate_with_db_or_uuid
        cpp_name: newNamespaceNotIgnored
        strict: true
        api_version: "1"
        reply_type: OkReply

    newNamespaceNotConcatenateWithDbOrUuid:
        description: "new command fails because its namespace is not concatenate_with_db_or_uuid
                      or ignored"
        command_name: newNamespaceNotConcatenateWithDbOrUuid
        namespace: concatenate_with_db
        cpp_name: newNamespaceNotConcatenateWithDbOrUuid
        strict: true
        api_version: "1"
        reply_type: OkReply

    newNamespaceNotConcatenateWithDb:
        description: "new command fails because its namespace changes to type"
        command_name: newNamespaceNotConcatenateWithDb
        namespace: type
        type: string
        cpp_name: newNamespaceNotConcatenateWithDb
        strict: true
        api_version: "1"
        reply_type: OkReply

    newNamespaceNotType:
        description: "new command fails because its namespace changes from type in
                      an incompatible way"
        command_name: newNamespaceNotType
        namespace: concatenate_with_db
        cpp_name: newNamespaceNotType
        strict: true
        api_version: "1"
        reply_type: OkReply

    oldTypeBsonAny:
        description: "old command fails because its type has a bson_serialization_type
                      that contains 'any'"
        command_name: oldTypeBsonAny
        namespace: type
        type: oldBsonSerializationTypeAny
        cpp_name: oldTypeBsonAny
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeBsonAny:
        description: "new command fails because its type has a bson_serialization_type
                      that contains 'any'"
        command_name: newTypeBsonAny
        namespace: type
        type: newBsonSerializationTypeAny
        cpp_name: newTypeBsonAny
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeNotSuperset:
        description: "new command fails because its type is not a superset
                      of the old type"
        command_name: newTypeNotSuperset
        namespace: type
        type: intStringBoolToIntString
        cpp_name: newTypeNotSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeEnumNotSuperset:
        description: "new command fails because its type is an enum that is not
                      a superset of the corresponding old type's enum values"
        command_name: newTypeEnumNotSuperset
        namespace: type
        type: EnumNotSuperset
        cpp_name: newTypeEnumNotSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeNotEnum:
        description: "new command fails because its type is not an enum when the
                      old type is an enum"
        command_name: newTypeNotEnum
        namespace: type
        type: StructType
        cpp_name: newTypeNotEnum
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeNotStruct:
        description: "new command fails because its type is not a struct when the
                      old type is a struct"
        command_name: newTypeNotStruct
        namespace: type
        type: EnumNotSuperset
        cpp_name: newTypeNotStruct
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeEnumOrStruct:
        description: "new command fails because the type is a non-enum or struct
                      type in the old command, and an enum or struct in the new command"
        command_name: newTypeEnumOrStruct
        namespace: type
        type: StructType
        cpp_name: newTypeEnumOrStruct
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeStructRecursive:
        description: "new command fails because its type is a struct that is
                      incompatible with the old type struct"
        command_name: newTypeStructRecursive
        namespace: type
        type: StructFieldTypeRecursiveReplyOne
        cpp_name: newTypeStructRecursive
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeFieldUnstable:
        description: "new command fails because it contains an unstable type field that is stable
                      in the corresponding old command"
        command_name: newTypeFieldUnstable
        namespace: type
        type: UnstableNewFieldReply
        cpp_name: newTypeFieldUnstable
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeFieldRequired:
        description: "new command fails because it contains a required reply field that is
                      optional in the corresponding old command"
        command_name: newTypeFieldRequired
        namespace: type
        type: RequiredNewField
        cpp_name: newTypeFieldRequired
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeFieldMissing:
        description: "new command fails because it is missing a type field that exists in
                      the corresponding old command"
        command_name: newTypeFieldMissing
        namespace: type
        type: MissingNewFieldReply
        cpp_name: newTypeFieldMissing
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeFieldAddedRequired:
        description: "new command fails because it has an added type field that is required
                      when it should be optional"
        command_name: newTypeFieldAddedRequired
        namespace: type
        type: AddedRequiredTypeFieldStruct
        cpp_name: newTypeFieldAddedRequired
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeFieldStableRequired:
        description: "new required stable type field fails because it is unstable
                      in the corresponding old command"
        command_name: newTypeFieldStableRequired
        namespace: type
        type: StableRequiredTypeFieldStruct
        cpp_name: newTypeFieldStableRequired
        strict: true
        api_version: "1"
        reply_type: OkReply

    newReplyFieldVariantType:
        description: "new command fails because its reply field type is a variant type while
                      the old reply field is not a variant type"
        command_name: newReplyFieldVariantType
        namespace: ignored
        cpp_name: newReplyFieldVariantType
        strict: true
        api_version: "1"
        reply_type: NewVariantTypeReply
    
    newReplyFieldVariantNotSubset:
        description: "new command fails because its reply field type is a variant type that is not
                      a subset of the old reply field variant types"
        command_name: newReplyFieldVariantNotSubset
        namespace: ignored
        cpp_name: newReplyFieldVariantNotSubset
        strict: true
        api_version: "1"
        reply_type: NewVariantNotSubsetReply

    replyFieldVariantRecursive:
        description: "new command fails because its reply field type is a variant type that is not
                      compatible with the old reply field variant type"
        command_name: replyFieldVariantRecursive
        namespace: ignored
        cpp_name: replyFieldVariantRecursive
        strict: true
        api_version: "1"
        reply_type: VariantRecursiveReply

    newReplyFieldVariantStructNotSubset:
        description: "new command fails because its reply field type is a variant type that is not
                      a subset of the old reply field variant types"
        command_name: newReplyFieldVariantStructNotSubset
        namespace: ignored
        cpp_name: newReplyFieldVariantStructNotSubset
        strict: true
        api_version: "1"
        reply_type: NewVariantStructNotSubsetReply
    
    replyFieldVariantStructRecursive:
        description: "new command fails because its reply field type has a variant
                      struct type that is not compatible with the old reply field variant
                      struct type"
        command_name: replyFieldVariantStructRecursive
        namespace: ignored
        cpp_name: replyFieldVariantStructRecursive
        strict: true
        api_version: "1"
        reply_type: VariantStructRecursiveReply