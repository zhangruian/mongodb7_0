# Copyright (C) 2021-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/idl/basic_types.idl"
    - "../buildscripts/idl/tests/compatibility_test_fail/new/imports.idl"

types:
    intToIntString:
        bson_serialization_type:
                                - int
                                - string
        description: "The bson_serialization_type changes from int in the old command's reply
                      field type to [int, string] in the new command's reply field type"
        cpp_type: "std::int32_t"
    
    intStringToIntStringBool:
        bson_serialization_type:
                                - int
                                - string
                                - bool
        description: "The bson_serialization_type changes from [int, string] in the old command's
                      reply field type to [int, string, bool] in the new command's reply field
                      type"
        cpp_type: "std::int32_t"

    oldBsonSerializationTypeAny:
        bson_serialization_type:
                                - int
        description: "The old bson_serialization_type contains 'any'"
        cpp_type: "std::int32_t"
    
    newBsonSerializationTypeAny:
        bson_serialization_type:
                                - int
                                - any
        description: "The new bson_serialization_type contains 'any'"
        cpp_type: "std::int32_t"

enums:
    NewReplyFieldEnumNotSubset:
        description: "The new reply type is an enum that is not a subset of the old reply type's 
                      enum values"
        type: string
        values:
            valueOne: "one"
            valueTwo: "two"
            valueThree: "three"

structs:
    UnstableNewFieldReply:
        description: "This reply contains a field that is stable in the old command but is
                      unstable in the new command."
        fields:
            unstableNewField:
                type: string
                unstable: true
    
    OptionalNewFieldReply:
        description: "This reply contains a field that is required in the old command but is
                      optional in the new command."
        fields:
            optionalNewField:
                type: string
                optional: true
    
    MissingNewFieldReply:
        description: "This reply contains a field that exists in the old command but is
                      missing in the new command."

    EnumNotSubsetReply:
        description: "This reply contains an enum field where the new enum values is not a subset
                      of the old reply type's enum values"
        fields:
            enumNotSubsetReplyField:
                type: NewReplyFieldEnumNotSubset

    NotEnumFieldReply:
        description: "This reply contains a field that is an enum type in the old command but
                      is not an enum type in the new command"
        fields:
            notEnumReplyField:
                type: string

    NotStructFieldReply:
        description: "This reply contains a field that is a struct type in the old command but
                      is not a struct type in the new command"
        fields:
            notStructReplyField:
                type: string

    EnumOrStructFieldReply:
        description: "This reply contains a field that is a non-enum or struct type in the old
                      command but is an enum or struct in the new command"
        fields:
            EnumOrStructReplyField:
                type: NewReplyFieldEnumNotSubset

    BsonNotSubsetReply:
        description: "This reply contains a field type where the new bson_serialization_type
                      is not a subset of the old bson_serialization_type"
        fields:
            bsonNotSubsetReplyField:
                type: intToIntString

    BsonNotSubsetReplyTwo:
        description: "This reply contains a field type where the new bson_serialization_type
                      is not a subset of the old bson_serialization_type"
        fields:
            bsonNotSubsetReplyFieldTwo:
                type: intStringToIntStringBool

    OldBsonSerializationTypeAnyReply:
        description: "This reply contains a field whose old type has a bson_serialization_type
                      that contains 'any'"
        fields:
            oldBsonSerializationTypeAnyReplyField:
                type: oldBsonSerializationTypeAny

    NewBsonSerializationTypeAnyReply:
        description: "This reply contains a field whose new type has a bson_serialization_type
                      that contains 'any'"
        fields:
            newBsonSerializationTypeAnyReplyField:
                type: newBsonSerializationTypeAny

    StructFieldTypeRecursiveReplyOne:
        description: "This reply contains a field whose new type is a struct that is not 
                      compatible with the old field type"
        fields:
            structReplyField:
                type: UnstableNewFieldReply
    
    StructFieldTypeRecursiveReplyTwo:
        description: "This reply contains a field whose new type is a struct that is not 
                      compatible with the old field type"
        fields:
            structReplyField:
                type: StructType

    StructType:
        description: "This struct contains a field whose new type is incompatible with the 
                      old field type"
        fields:
            fieldOne:
                type: BsonNotSubsetReply

commands:
    invalidAPIVersionNew:
        description: "new command fails because of invalid API version"
        command_name: invalidAPIVersionNew
        namespace: ignored
        cpp_name: invalidAPIVersionNew
        strict: true
        api_version: "whatever"
        reply_type: OkReply

    duplicateCommandNew:
        description: "duplicate command in new commands fails because a command with the same name
                      is in duplicate_command_fail_new.idl"
        command_name: duplicateCommandNew
        namespace: ignored
        cpp_name: duplicateCommandNew
        strict: true
        api_version: "1"
        reply_type: OkReply

    invalidAPIVersionOld:
        description: "old version of this command in compatibility_test_fail_old.idl fails because
                      of invalid API version"
        command_name: invalidAPIVersionOld
        namespace: ignored
        cpp_name: invalidAPIVersionOld
        strict: true
        api_version: "1"
        reply_type: OkReply

    duplicateCommandOld:
        description: "old version of this command in compatibility_test_fail_old.idl fails because
                      a command with the same name is in duplicate_command_fail_old.idl"
        command_name: duplicateCommandOld
        namespace: ignored
        cpp_name: duplicateCommandOld
        strict: true
        api_version: "1"
        reply_type: OkReply
    
    newReplyFieldUnstable:
        description: "new command fails because it contains an unstable reply field that is stable
                      in the corresponding old command"
        command_name: newReplyFieldUnstable
        namespace: ignored
        cpp_name: newReplyFieldUnstable
        strict: true
        api_version: "1"
        reply_type: UnstableNewFieldReply
    
    newReplyFieldOptional:
        description: "new command fails because it contains an optional reply field that is
                      required in the corresponding old command"
        command_name: newReplyFieldOptional
        namespace: ignored
        cpp_name: newReplyFieldOptional
        strict: true
        api_version: "1"
        reply_type: OptionalNewFieldReply

    newReplyFieldMissing:
        description: "new command fails because it is missing a reply field that exists in
                      the corresponding old command"
        command_name: newReplyFieldMissing
        namespace: ignored
        cpp_name: newReplyFieldMissing
        strict: true
        api_version: "1"
        reply_type: MissingNewFieldReply

    importedReplyCommand:
        description: "reply is imported and should fail"
        command_name: importedReplyCommand
        namespace: ignored
        cpp_name: importedReplyCommand
        strict: true
        api_version: "1"
        reply_type: ImportedUnstableNewFieldReply

    newReplyFieldTypeEnumNotSubset:
        description: "new command fails because its reply field type is an enum that is not
                      a subset of the corresponding old reply field type's enum values"
        command_name: newReplyFieldTypeEnumNotSubset
        namespace: ignored
        cpp_name: newReplyFieldTypeEnumNotSubset
        strict: true
        api_version: "1"
        reply_type: EnumNotSubsetReply

    newReplyFieldTypeNotEnum:
        description: "new command fails because its reply field type is not an enum when the
                      old reply field type is an enum"
        command_name: newReplyFieldTypeNotEnum
        namespace: ignored
        cpp_name: newReplyFieldTypeNotEnum
        strict: true
        api_version: "1"
        reply_type: NotEnumFieldReply

    newReplyFieldTypeNotStruct:
        description: "new command fails because its reply field type is not a struct when the
                      old reply field type is a struct"
        command_name: newReplyFieldTypeNotStruct
        namespace: ignored
        cpp_name: newReplyFieldTypeNotStruct
        strict: true
        api_version: "1"
        reply_type: NotStructFieldReply

    newReplyFieldTypeEnumOrStruct:
        description: "new command fails because it contains a field that is a non-enum or struct
                      type in the old command, and an enum or struct in the new command"
        command_name: newReplyFieldTypeEnumOrStruct
        namespace: ignored
        cpp_name: newReplyFieldTypeEnumOrStruct
        strict: true
        api_version: "1"
        reply_type: EnumOrStructFieldReply

    newReplyFieldTypeBsonNotSubset:
        description: "new command fails because its reply field type has a bson_serialization_type
                      that is not a subset of the corresponding old reply field type's
                      bson_serialization_type"
        command_name: newReplyFieldTypeBsonNotSubset
        namespace: ignored
        cpp_name: newReplyFieldTypeBsonNotSubset
        strict: true
        api_version: "1"
        reply_type: BsonNotSubsetReply

    newReplyFieldTypeBsonNotSubsetTwo:
        description: "new command fails because its reply field type has a bson_serialization_type
                      that is not a subset of the corresponding old reply field type's
                      bson_serialization_type"
        command_name: newReplyFieldTypeBsonNotSubsetTwo
        namespace: ignored
        cpp_name: newReplyFieldTypeBsonNotSubsetTwo
        strict: true
        api_version: "1"
        reply_type: BsonNotSubsetReplyTwo

    oldReplyFieldTypeBsonAny:
        description: "old command fails because its reply field type has a bson_serialization_type
                      that contains 'any'"
        command_name: oldReplyFieldTypeBsonAny
        namespace: ignored
        cpp_name: oldReplyFieldTypeBsonAny
        strict: true
        api_version: "1"
        reply_type: OldBsonSerializationTypeAnyReply

    newReplyFieldTypeBsonAny:
        description: "new command fails because its reply field type has a bson_serialization_type
                      that contains 'any'"
        command_name: newReplyFieldTypeBsonAny
        namespace: ignored
        cpp_name: newReplyFieldTypeBsonAny
        strict: true
        api_version: "1"
        reply_type: NewBsonSerializationTypeAnyReply

    newReplyFieldTypeStructRecursiveOne:
        description: "new command fails because its reply field type is a struct that is
                      incompatible with the old reply field type struct"
        command_name: newReplyFieldTypeStructRecursiveOne
        namespace: ignored
        cpp_name: newReplyFieldTypeStructRecursiveOne
        strict: true
        api_version: "1"
        reply_type: StructFieldTypeRecursiveReplyOne

    newReplyFieldTypeStructRecursiveTwo:
        description: "new command fails because its reply field type is a struct that is
                      incompatible with the old reply field type struct"
        command_name: newReplyFieldTypeStructRecursiveTwo
        namespace: ignored
        cpp_name: newReplyFieldTypeStructRecursiveTwo
        strict: true
        api_version: "1"
        reply_type: StructFieldTypeRecursiveReplyTwo
