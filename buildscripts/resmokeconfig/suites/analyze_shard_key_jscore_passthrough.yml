test_kind: js_test

selector:
  roots:
  - jstests/core/**/*.js
  exclude_files:
  # The following tests fail because a certain command or functionality is not supported on
  # mongos. This command or functionality is placed in a comment next to the failing test.
  - jstests/core/**/apitest_db.js  # serverStatus output doesn't have storageEngine.
  - jstests/core/**/check_shard_index.js  # checkShardingIndex.
  - jstests/core/**/collection_truncate.js  # emptycapped.
  - jstests/core/**/compact_keeps_indexes.js  # compact.
  - jstests/core/**/currentop.js  # uses fsync.
  - jstests/core/**/dbhash.js  # dbhash.
  - jstests/core/**/dbhash2.js  # dbhash.
  - jstests/core/**/fsync.js  # uses fsync.
  - jstests/core/**/geo_s2cursorlimitskip.js # profiling.
  - jstests/core/**/geo_update_btree2.js  # notablescan.
  - jstests/core/**/index9.js  # "local" database.
  - jstests/core/**/queryoptimizera.js  # "local" database.
  - jstests/core/**/stages*.js  # stageDebug.
  - jstests/core/**/startup_log.js  # "local" database.
  - jstests/core/**/top.js  # top.
  # The following tests fail because mongos behaves differently from mongod when testing certain
  # functionality. The differences are in a comment next to the failing test.
  - jstests/core/**/explain_missing_database.js  # Behavior with no db different on mongos.
  - jstests/core/**/geo_2d_explain.js  # executionSuccess in different spot in explain().
  - jstests/core/**/geo_s2explain.js  # inputStage in different spot in explain().
  - jstests/core/**/geo_s2sparse.js  # keysPerIndex in different spot in validate().
  - jstests/core/**/operation_latency_histogram.js  # Stats are counted differently on mongos, SERVER-24880.
  - jstests/core/**/killop_drop_collection.js # Uses fsyncLock.
  - jstests/core/**/or_to_in.js # queryPlanner in different spot in explain().
  # The following tests fail because of divergent dropCollection behavior between standalones and
  # sharded clusters. These tests expect a second drop command to error, whereas in sharded clusters
  # we expect a second drop to return status OK.
  - jstests/core/**/explain_upsert.js
  # Profile can only be run against the admin database on mongos.
  - jstests/core/txns/transactions_profiling.js
  - jstests/core/txns/transactions_profiling_with_drops.js

  # Implicitly creates a database through a collection rename, which does not work in a sharded
  # cluster.
  - jstests/core/txns/transactions_block_ddl.js
  # transactionLifetimeLimitSeconds parameter is not available in mongos.
  - jstests/core/txns/abort_expired_transaction.js
  - jstests/core/txns/abort_transaction_thread_does_not_block_on_locks.js
  - jstests/core/txns/kill_op_on_txn_expiry.js
  # Uses hangAfterCollectionInserts failpoint not available on  mongos.
  - jstests/core/txns/speculative_snapshot_includes_all_writes.js

  # TODO: SERVER-72299: Investigate why the following tests fail.

  # "Collection test_txns_create_collection.create_new_collection already exists."
  - jstests/core/txns/create_collection.js
  # "assert: [1] != [2] are not equal : getAggPlanStage expects to find 0 or 1 matching stages."
  - jstests/core/**/expr_index_use.js
  - jstests/core/**/optimized_match_explain.js
  # "Attempt to continue an aborted transaction - assert: command worked when it should have failed"
  - jstests/core/txns/finished_transaction_error_handling.js
  # "Error: command worked when it should have failed"
  - jstests/core/**/list_indexes_non_existent_ns.js
  # "ns: bypass_document_validation.bypass_output_coll already exists with different options: {}"
  - jstests/core/**/bypass_doc_validation.js
  # "got stale shardVersion response from shard shard-rs1 at host localhost:20003 :: caused by :: timestamp mismatch detected for test.view_reads_in_transaction_actual_view"
  - jstests/core/txns/view_reads_in_transaction.js
  # "Error: [null] != ["coll"] are not equal"
  - jstests/core/**/collection_uuid_index_commands.js
  # "ns does not exist: test.column_store_index_compression"
  - jstests/core/**/column_store_index_compression.js
  # "Error: [10] != [20] are not equal"
  - jstests/core/**/distinct_index1.js
  # "Error: [neverCreated] != [neverCreated] are equal : Found db which shouldn't exist:neverCreated"
  - jstests/core/**/no_db_created.js
  # timed out
  - jstests/core/txns/many_txns.js
  - jstests/core/txns/aggregation_in_transaction.js
  - jstests/core/timeseries/bucket_unpacking_with_sort_extended_range.js
  # "Cannot create new indexes on existing collection test_txns_create_indexes.create_new_indexes in a multi-document transaction."
  - jstests/core/txns/create_indexes.js
  # "MapReduce internal error :: caused by :: PlanExecutor error during aggregation :: caused by :: failed while running command { internalRenameIfOptionsAndIndexesMatch: 1, from: \"test.tmp.agg_out.bb7367ba-7dfb-43ff-9694-8fd49cc0e802\", to: \"test.mr_preserve_indexes_out\", collectionOptions: {}, indexes: [ { v: 2, key: { _id: 1 }, name: \"_id_\" }, { v: 2, key: { _id: \"hashed\" }, name: \"_id_hashed\" } ], writeConcern: { w: \"majority\", wtimeout: 0, provenance: \"implicitDefault\" } } :: caused by :: cannot rename to sharded collection 'test.mr_preserve_indexes_out'"
  - jstests/core/**/mr_preserve_indexes.js
  # "TypeError: result.shards['shard-rs0'] is undefined"
  - jstests/core/timeseries/bucket_unpacking_with_sort.js
  # "Error: [1] != [2] are not equal"
  - jstests/core/**/create_indexes.js
  # "Error: [3] != [2] are not equal"
  - jstests/core/**/bad_index_plugin.js
  # "Error: [1] != [2] are not equal"
  - jstests/core/**/sortk.js
  # "Collection test_txns_create_collection_parallel.create_new_collection already exists."
  - jstests/core/txns/create_collection_parallel.js
  # "Invalid system namespace: rename8.system.foo"
  - jstests/core/**/rename_collection_system_db.js
  # "Error: [1] != [2] are not equal"
  - jstests/core/timeseries/timeseries_reopened_bucket_insert.js
  # "Cannot create new indexes on existing collection test_txns_create_indexes_parallel.create_new_collection in a multi-document transaction."
  - jstests/core/txns/create_indexes_parallel.js
  # "Error: [4] != [7] are not equal : wrong count result"
  - jstests/core/**/explain_count.js
  # "Error: [1] != [0] are not equal"
  - jstests/core/timeseries/nondefault_collation.js
  # "Error: [1] != [2] are not equal : unexpected number of indexes in collection"
  - jstests/core/timeseries/partialFilterExpression_with_internalBucketGeoWithin.js
  # "Error: [{"$and" : [...}] are not equal..."
  - jstests/core/timeseries/timeseries_internal_bucket_geo_within.js
  # "Error on remote shard localhost:20253 :: caused by :: Executor error during getMore :: caused by :: BoundedSorter input is too out-of-order."
  - jstests/core/timeseries/bucket_unpacking_with_sort_extended_range.js
  # "Error: assert failed : getPlanStage expects to find 0 or 1 matching stages."
  - jstests/core/**/index_multikey.js
  # "Error: [20] != [40] are not equal : H "
  - jstests/core/**/explain1.js
  # "Error: "[5] != [9] are not equal" BF-27300
  - jstests/core/**/explain4.js
  # "Error: assert failed : Expected an index scan for predicate"
  - jstests/core/timeseries/timeseries_index_partial.js

  exclude_with_any_tags:
  - assumes_against_mongod_not_mongos
  - assumes_standalone_mongod
  # system.profile collection doesn't exist on mongos.
  - requires_profiling

  # Transactions are not allowed to operate on capped collections.
  - requires_capped
  # Prepare is not a command on mongos.
  - uses_prepare_transaction

  # Tests tagged with the following will fail because they assume collections are not sharded.
  - assumes_no_implicit_collection_creation_after_drop
  - assumes_no_implicit_index_creation
  - assumes_unsharded_collection
  - cannot_create_unique_index_when_using_hashed_shard_key
  # Cannot retry a getMore command if a transient transaction or network error occurs during
  # it, since we won't know whether the cursor was advanced or not.
  - requires_getmore

  - uses_api_parameters

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckReplOplogs
      - ValidateCollections
  config:
    shell_options:
      eval: >-
        load("jstests/libs/override_methods/implicitly_configure_query_analyzer.js");
  hooks:
  - class: CheckReplOplogs
  - class: CheckReplDBHash
  - class: ValidateCollections
  - class: CleanEveryN
    n: 20
  fixture:
    class: ShardedClusterFixture
    num_shards: 2
    enable_balancer: false
    configsvr_options:
      all_nodes_electable: true
    shard_options:
      all_nodes_electable: true
    mongod_options:
      set_parameters:
        enableElectionHandoff: 0
        queryAnalysisSamplerConfigurationRefreshSecs: 1
        queryAnalysisWriterIntervalSecs: 5
    mongos_options:
      set_parameters:
        queryAnalysisSamplerConfigurationRefreshSecs: 1
    num_rs_nodes_per_shard: 3
    num_mongos: 1
