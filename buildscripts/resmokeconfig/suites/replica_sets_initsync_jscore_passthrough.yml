test_kind: js_test

selector:
  roots:
  - jstests/core/**/*.js
  exclude_files:
  # These tests are not expected to pass with replica-sets:
  - jstests/core/dbadmin.js
  - jstests/core/opcounters_write_cmd.js
  - jstests/core/read_after_optime.js
  - jstests/core/capped_update.js
  # Tests that query the system.profile collection cannot run in this suite since an initial sync
  # may insert unexpected operations into the profile collection.
  - jstests/core/profile_list_collections.js
  - jstests/core/profile_list_indexes.js
  - jstests/core/profile_repair_cursor.js
  - jstests/core/recursion.js
  - jstests/core/system_profile.js
  - jstests/core/temp_cleanup.js
  # operation_latency_histogram.js and geo_s2cursorlimitskip.js do not expect concurrent reads
  # against their test collections.
  - jstests/core/operation_latency_histogram.js
  - jstests/core/geo_s2cursorlimitskip.js
  # Having duplicate namespaces is not supported and will cause initial sync to fail.
  - jstests/core/views/duplicate_ns.js
  # These tests run getLatestProfilerEntry(). The downstream syncing node affects the profiler.
  - jstests/core/profile_agg.js
  - jstests/core/profile_count.js
  - jstests/core/profile_delete.js
  - jstests/core/profile_distinct.js
  - jstests/core/profile_find.js
  - jstests/core/profile_findandmodify.js
  - jstests/core/profile_getmore.js
  - jstests/core/profile_insert.js
  - jstests/core/profile_mapreduce.js
  - jstests/core/profile_sampling.js
  - jstests/core/profile_update.js
  - jstests/core/txns/transactions_profiling.js
  # The downstream syncing node affects the top output.
  - jstests/core/top.js
  # TODO (SERVER-36492): Unblacklist when we correctly reconstruct prepared transactions after
  # initial sync.
  - jstests/core/txns/abort_prepared_transaction.js
  - jstests/core/txns/commit_prepared_transaction_errors.js
  - jstests/core/txns/empty_prepare.js
  - jstests/core/txns/no_new_transactions_when_prepared_transaction_in_progress.js
  - jstests/core/txns/no_writes_to_config_transactions_with_prepared_transaction.js
  - jstests/core/txns/prepare_conflict.js
  - jstests/core/txns/prepare_conflict_aggregation_behavior.js
  - jstests/core/txns/prepare_prepared_transaction.js
  - jstests/core/txns/prepared_transactions_do_not_block_non_conflicting_ddl.js
  - jstests/core/txns/statement_ids_accepted.js
  # TODO (SERVER-35865): Unblacklist when we also correctly write and apply 'commitTransaction'
  # oplog entries, besides SERVER-36492.
  - jstests/core/txns/commit_prepared_transaction.js
  - jstests/core/txns/disallow_operations_on_prepared_transaction.js
  - jstests/core/txns/ensure_active_txn_for_prepare_transaction.js
  - jstests/core/txns/prepare_requires_fcv42.js
  - jstests/core/txns/timestamped_reads_wait_for_prepare_oplog_visibility.js

run_hook_interval: &run_hook_interval 20
executor:
  archive:
    hooks:
      - BackgroundInitialSync
  config:
    shell_options:
      eval: "testingReplication = true;"
      readMode: commands
  hooks:
  - class: BackgroundInitialSync
    n: *run_hook_interval
  - class: CleanEveryN
    n: *run_hook_interval
  fixture:
    class: ReplicaSetFixture
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        collectionClonerBatchSize: 10
        initialSyncOplogFetcherBatchSize: 10
    num_nodes: 2
    start_initial_sync_node: True
