# This test suite is intended to exercise the primary and secondary behavior for transactions
# using the multiple oplog entries format.

test_kind: js_test

selector:
  roots:
  - jstests/core/txns/*.js
  exclude_files:
  # These tests change the featureCompatibilityVersion which makes it so transactions aren't
  # supported.
  - jstests/core/txns/abort_transactions_on_FCV_downgrade.js
  # These tests change the transactionLifetimeLimitSeconds server parameter which conflicts with how
  # the CheckReplDBHashInBackground hook doesn't want transactions to be reaped while it is running.
  - jstests/core/txns/abort_expired_transaction.js
  - jstests/core/txns/abort_transaction_thread_does_not_block_on_locks.js
  - jstests/core/txns/kill_op_on_txn_expiry.js
  # TODO SERVER-40068: Attempting to kill a session while multiple transactions have been started on
  # the server may lead to deadlock.
  - jstests/core/txns/kill_sessions_kills_transaction.js

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckReplOplogs
      - ValidateCollections
  config:
    shell_options:
      eval: "testingReplication = true;"
      readMode: commands
  hooks:
  # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
  # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
  # validating the entire contents of the collection.
  # TODO SERVER-39321: Re-enable and archive the CheckReplDBHashInBackground hook.
  - class: CheckReplOplogs
  - class: CheckReplDBHash
  - class: ValidateCollections
  - class: CleanEveryN
    n: 20
  fixture:
    class: ReplicaSetFixture
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        useMultipleOplogEntryFormatForTransactions: true
        # TODO SERVER-39321: Remove the following block now that SERVER-35377 has been resolved.
        #
        # When running tests that intentionally trigger a DuplicateKeyError, we somehow end up
        # performing an atClusterTime read in the CheckReplDBHashInBackground hook based on an
        # operationTime that is greater than anything in the oplog. The periodic no-op writer must
        # be enabled to ensure that we eventually reach the clusterTime we are waiting for.
        writePeriodicNoops: 1
    num_nodes: 2
