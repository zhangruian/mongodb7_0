test_kind: js_test

selector:
  roots:
  - jstests/core/**/*.js
  exclude_files:
  - jstests/core/txns/**/*.js
  # These tests depend on hardcoded database name equality.
  - jstests/core/json_schema/misc_validation.js
  - jstests/core/list_databases.js
  - jstests/core/profile1.js
  - jstests/core/profile3.js
  - jstests/core/views/views_stats.js
  # These tests contain assertions on the number of executed operations and this suite retries
  # operations on TenantMigrationAborted errors.
  - jstests/core/find_and_modify_metrics.js
  - jstests/core/update_metrics.js
  - jstests/core/operation_latency_histogram.js
  - jstests/core/top.js
  - jstests/core/profile_sampling.js
  - jstests/core/profile_hide_index.js
  # The override cannot deep copy very large or small dates.
  - jstests/core/index_large_and_small_dates.js
  # This test expects that the connection (i.e. 'threadName') does not change throughout each test
  # case. That is not always true when there is a background tenant migration.
  - jstests/core/failcommand_failpoint.js
  # The set_param1.js test attempts to compare the response from running the {getParameter: "*"}
  # command multiple times, which may observe the change to the failpoint enabled by the migration
  # hook.
  - jstests/core/set_param1.js
  # This test does not support tojson of command objects so the override cannot deep copy the
  # command objects correctly.
  - jstests/core/SERVER-23626.js
  # These tests write with {w: 0} which doesn't wait for the storage transaction writing the
  # document and the oplog entry to commit so the TenantMigrationConflict will not be caught.
  - jstests/core/batch_write_command_w0.js
  - jstests/core/crud_api.js
  # These tests use benchRun which does not use runCommand.
  - jstests/core/bench_test1.js
  - jstests/core/bench_test3.js
  - jstests/core/benchrun_pipeline_updates.js
  # This test uses exhaust which does not use runCommand.
  - jstests/core/exhaust.js
  # These tests use db._authOrThrow which does not use runCommand.
  - jstests/core/auth1.js
  - jstests/core/connection_status.js
  - jstests/core/user_management_helpers.js
  # These tests use legacy read mode which does not use runCommand.
  - jstests/core/comment_field.js
  - jstests/core/invalidated_legacy_cursors.js
  # TODO (SERVER-51753): Handle applyOps running concurrently with a tenant migration.
  - jstests/core/apply_ops1.js
  - jstests/core/apply_ops1.js
  - jstests/core/apply_ops2.js
  - jstests/core/apply_ops_dups.js
  - jstests/core/apply_ops_index_collation.js
  - jstests/core/apply_ops_invalid_index_spec.js
  - jstests/core/apply_ops_missing_field.js
  - jstests/core/apply_ops_system_dot_views.js
  - jstests/core/apply_ops_without_ns.js
  - jstests/core/bypass_doc_validation.js
  - jstests/core/collation.js
  - jstests/core/collmod_without_uuid.js
  - jstests/core/txns/commands_banning_txnnumber_outside_transactions.js
  - jstests/core/txns/commands_not_allowed_in_txn.js
  - jstests/core/txns/prepare_transaction_fails_on_temp_collections.js
  - jstests/core/txns/statement_ids_accepted.js
  - jstests/core/list_collections1.js
  - jstests/core/list_collections_filter.js
  - jstests/core/list_collections_no_views.js
  - jstests/core/views/duplicate_ns.js
  - jstests/core/views/view_with_invalid_dbname.js
  - jstests/core/views/views_creation.js
  - jstests/core/views/invalid_system_views.js
  - jstests/core/views/views_all_commands.js
  - jstests/core/rename_stayTemp.js
  # TODO (SERVER-52727): Synchronize cloneCollectionAsCapped with tenant migrations.
  - jstests/core/capped_convertToCapped1.js
  # TODO (SERVER-52866): Synchronize getLastError with tenant migrations.
  - jstests/core/bulk_legacy_enforce_gle.js
  # This test contains assertions for the hostname that operations run on.
  - jstests/core/currentop_cursors.js
  # Server parameters are stored in-memory only so are not transferred onto the recipient. These
  # tests set the server parameter "notablescan" to force the node to not execute queries that
  # require a collection scan and return an error.
  - jstests/core/notablescan.js
  - jstests/core/notablescan_capped.js
  # captrunc command is not blocked during tenant migration.
  - jstests/core/capped6.js
  # TODO (SERVER-51774): Ensure the donor's TenantMigrationCommitted/TenantMigrationAborted write
  # errors don't exceed the max BSON size.
  - jstests/core/batch_write_command_delete.js
  - jstests/core/batch_write_command_insert.js
  - jstests/core/batch_write_command_update.js
  # Multi-updates that conflict with tenant migration are not retried by inject_tenant_prefix.js.
  - jstests/core/batch_write_collation_estsize.js
  - jstests/core/bulk_api_ordered.js
  - jstests/core/bulk_api_unordered.js
  - jstests/core/fts_querylang.js
  - jstests/core/idhack.js
  - jstests/core/role_management_helpers.js
  - jstests/core/roles_info.js
  - jstests/core/server1470.js
  - jstests/core/update_arrayFilters.js
  - jstests/core/update_arraymatch2.js
  - jstests/core/update_arraymatch3.js
  - jstests/core/update_arraymatch5.js
  - jstests/core/update_hint.js
  - jstests/core/update_multi3.js
  - jstests/core/update_multi4.js
  - jstests/core/update_multi5.js
  - jstests/core/update_pipeline_shell_helpers.js
  - jstests/core/update_with_pipeline.js
  - jstests/core/update7.js
  - jstests/core/updatei.js
  - jstests/core/updatej.js
  - jstests/core/updatel.js
  - jstests/core/where_system_js.js
  - jstests/core/write_result.js

  exclude_with_any_tags:
  - assumes_standalone_mongod
  # These tests run getMore commands which are not supported in the tenant migration passthrough.
  - requires_getmore
  # Due to background tenant migrations, operations in the main test shell are not guaranteed to
  # be causally consistent with operations in a parallel shell. The reason is that
  # TenantMigrationCommitted error is only thrown when the client does a write or a atClusterTime/
  # afterClusterTime or linearlizable read. Therefore, one of shell may not be aware that the
  # migration has occurred and would not forward the read/write command to the right replica set.
  - uses_parallel_shell
  # Profile settings are stored in-memory only so are not transferred to the recipient.
  - requires_profiling
  # emptycapped command is blocked during tenant migration.
  - requires_emptycapped

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckReplOplogs
      - ValidateCollections
  config:
    shell_options:
      eval: >-
        testingReplication = true;
        load('jstests/libs/override_methods/inject_tenant_prefix.js');
      global_vars:
        TestData: &TestData
          tenantId: "tenantMigrationTenantId"
      readMode: commands
  hooks:
  - class: ContinuousTenantMigration
    shell_options:
      global_vars:
        TestData: *TestData
  # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
  # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
  # validating the entire contents of the collection.
  - class: CheckReplOplogs
  - class: CheckReplDBHash
  - class: ValidateCollections
  - class: CleanEveryN
    n: 20
  fixture:
    class: TenantMigrationFixture
    common_mongod_options:
      set_parameters:
        enableTestCommands: 1
        failpoint.abortTenantMigrationBeforeLeavingBlockingState:
            mode:
              activationProbability: 0.5
        failpoint.pauseTenantMigrationBeforeLeavingBlockingState:
            mode: alwaysOn
            data:
              blockTimeMS: 250
        # To avoid routing commands in each test incorrectly, the ContinuousTenantMigration hook
        # only runs donorForgetMigration against the donor of each migration when it is safe to do
        # so. Therefore, the garbage collection delay doesn't need to be large.
        tenantMigrationGarbageCollectionDelayMS: 1
        ttlMonitorSleepSecs: 1
      tlsMode: allowTLS
      tlsCAFile: jstests/libs/ca.pem
      tlsAllowInvalidHostnames: ''
    per_mongod_options:
      # Each entry is for a different replica set's extra mongod options.
      - tlsCertificateKeyFile: jstests/libs/rs0.pem
      - tlsCertificateKeyFile: jstests/libs/rs1.pem
    num_replica_sets: 2
    num_nodes_per_replica_set: 3
    use_replica_set_connection_string: true
