# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/mongod_options.h"
        - "mongo/db/storage/storage_options.h"
    configs:
        section: 'Storage options'
        source: [ yaml, cli, ini ]
        initializer:
            register: addMongodStorageOptions

configs:
    'storage.engine':
        description: 'What storage engine to use - defaults to wiredTiger if no data files present'
        short_name: storageEngine
        arg_vartype: String

    'storage.dbPath':
        description:
            expr: 'storageDBPathDescription()'
            is_constexpr: false
        short_name: dbpath
        arg_vartype: String

    'storage.directoryPerDB':
        description: 'Each database will be stored in a separate directory'
        short_name: directoryperdb
        arg_vartype: Switch

    'storage.queryableBackupMode':
        description: 'Enable read-only mode - if true the server will not accept writes'
        short_name: queryableBackupMode
        arg_vartype: Switch
        hidden: true

    'storage.groupCollections':
        description: >-
            Group collections - if true the storage engine may group
            collections within a database into a shared record store
        short_name: groupCollections
        arg_vartype: Switch
        hidden: true

    'storage.syncPeriodSecs':
        description: 'Seconds between disk syncs (0=never, but not recommended)'
        short_name: syncdelay
        arg_vartype: Double
        default: 60.0
        validator:
            gte: 0.0
            lte: { expr: 'StorageGlobalParams::kMaxSyncdelaySecs' }

    'storage.journal.commitIntervalMs':
        description: 'how often to group/batch commit (ms)'
        short_name: 'journalCommitInterval'
        arg_vartype: Int
        default: 100
        validator:
            gte: 1
            lte: { expr: 'StorageGlobalParams::kMaxJournalCommitIntervalMs' }

    'storage.indexBuildRetry':
        description: "Do not retry any index builds that were interrupted by shutdown"
        arg_vartype: Switch
        conflicts: ['replication.replSet', 'replication.replSetName']
        source: yaml

    noIndexBuildRetry:
        description: "Do not retry any index builds that were interrupted by shutdown"
        short_name: noIndexBuildRetry
        arg_vartype: Switch
        conflicts: ['replication.replSet', 'replication.replSetName']
        source: [ cli, ini ]

    upgrade:
        description: 'Upgrade db if needed'
        arg_vartype: Switch
        source: [ cli, ini ]

    repair:
        description: 'Run repair on all dbs'
        arg_vartype: Switch
        source: [ cli, ini ]

    'storage.journal.enabled':
        description: 'Enable journaling'
        short_name: journal
        deprecated_short_name: dur
        arg_vartype: Switch

    nojournal:
        description: 'Disable journaling (journaling is on by default for 64 bit)'
        deprecated_short_name: nodur
        arg_vartype: Switch
        source: [ cli, ini ]
