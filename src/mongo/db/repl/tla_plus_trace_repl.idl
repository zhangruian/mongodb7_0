# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# RaftMongo.tla Trace Events

global:
    cpp_namespace: "mongo::repl"

imports:
    - "mongo/idl/basic_types.idl"
    - "mongo/db/repl/replication_types.idl"
    - "mongo/util/tla_plus_trace.idl"

enums:
    RaftMongoSpecAction:
        description: "The supported actions in the RaftMongo.tla spec."
        type: string
        values:
            kAdvanceCommitPoint: "AdvanceCommitPoint"
            kAppendOplog: "AppendOplog"
            kBecomePrimaryByMagic: "BecomePrimaryByMagic"
            kClientWrite: "ClientWrite"
            kLearnCommitPointFromSyncSourceNeverBeyondLastApplied: "LearnCommitPointFromSyncSourceNeverBeyondLastApplied"
            kLearnCommitPointWithTermCheck: "LearnCommitPointWithTermCheck"
            kReplSetInitiate: "ReplSetInitiate"
            kRollbackOplog: "RollbackOplog"

    RaftMongoSpecServerState:
        description: "The server states (leader or follower) modeled in RaftMongo.tla."
        type: string
        values:
            kLeader: "Leader"
            kFollower: "Follower"

structs:
    RaftMongoSpecEvent:
        description: "A subdocument containing values modeled by the RaftMongo.tla spec."
        fields:
            serverState:
                type: RaftMongoSpecServerState
                description: "This server's state."
            commitPoint:
                type: optime
                description: "The current commit point according to this server."
            term:
                type: long
                description: "The current term according to this server."
            log:
                type: array<optime>
                description: "Optimes of all entries in the oplog."
