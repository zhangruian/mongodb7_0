# Copyright (C) 2023-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/feature_compatibility_version_parser.h"

imports:
    - "mongo/db/repl/replication_types.idl"
    - "mongo/db/basic_types.idl"

enums:
    MovePrimaryDonorState:
        description: "The state of a movePrimary operation on the donor side."
        type: int
        values:
            kUninitialized: 0
            kInitializing: 1
            kDataSync: 2
            kConsistent: 3
            kBlocking: 4
            kCommitting: 5
            kAborted: 6

    MovePrimaryRecipientState:
        description: "The state of a movePrimary operation on the recipient side."
        type: int
        values:
            kUninitialized: 0
            kStarted: 1
            kConsistent: 2
            kAborted: 3
            kDone: 4

structs:
    MovePrimaryDonorDocument:
        description: "Represents an in-progress move primary operation on the donor."
        strict: false
        fields:
            _id:
                type: uuid
                description: "Unique identifier for the movePrimary operation."
                cpp_name: id
            databaseName:
                type: string
                description: >-
                    The name of the database being moved as part of movePrimary operation.
            toShard:
                type: string
                description: "The name of the recipient shard."
            state:
                type: MovePrimaryDonorState
                description: "The state of an in-progress movePrimary operation on the donor."
                default: kUninitialized
            blockTimestamp:
                type: timestamp
                description: >-
                    The timestamp at which writes and causal reads against the databases
                    being migrated should start blocking.
                optional: true
            abortReason:
                type: object_owned
                description: "The error that caused the migration to abort."
                optional: true

    MovePrimaryRecipientDocument:
        description: "Represents an in-progress movePrimary operation on the recipient."
        strict: false
        fields:
            _id:
                type: uuid
                description: >-
                    Unique identifier for the movePrimary operation. 
                    This is sent as migrationId to the recipient by the donor.
                cpp_name: id
            databaseName:
                type: string
                description: >-
                    The name of the database being moved as part of movePrimary operation.
            fromShard:
                type: string
                description: "The name of the donor shard."
            state:
                type: MovePrimaryRecipientState
                description: "The state of the recipient during an in progress movePrimary operation."
                default: kUninitialized
            startApplyingDonorOpTime:
                description: >-
                    Populated during data sync; the donor's operation time when the data
                    cloning starts.
                type: optime
                optional: true
            startFetchingDonorOpTime:
                description: >-
                    Populated during data sync; the donor's operation time of the last open
                    transaction when the data cloning started.
                type: optime
                optional: true
            dataConsistentStopDonorOpTime:
                description: >-
                    Populated during data sync; the donor's operation time when the data
                    cloning finishes.
                type: optime
                optional: true
            cloneFinishedRecipientOpTime:
                description: >-
                    Populated during data sync; the recipient operation time when the data
                    cloning finishes.
                type: optime
                optional: true
            recipientPrimaryStartingFCV:
                description: >-
                    The featureCompatibilityVersion of the recipient as recorded at the beginning
                    of a migration attempt. Implicitly includes information on current upgrade or
                    downgrade state.
                type: fcv_string
                optional: true
            completedUpdatingTransactionsBeforeStartOpTime:
                description: >-
                    Indicates if the recipient has finished updating transaction entries that were
                    committed before 'startFetchingDonorOpTime'. If true, the recipient can skip
                    the fetching transactions stage.
                type: bool
                default: false
            completedFetchingRetryableWritesBeforeStartOpTime:
                description: >-
                    Indicates if the recipient has finished fetching retryable writes oplog entries
                    before 'startFetchingDonorOpTime' for each retryable writes entry in
                    'config.transactions'
                type: bool
                default: false
            startAt:
                type: date
                description: >-
                    The wall-clock time at which the state machine document is initialized.
                optional: true
