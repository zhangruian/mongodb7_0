# Copyright (C) 2021-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
  cpp_namespace: "mongo"
  cpp_includes:
    - "mongo/db/repl/tenant_migration_util.h"

imports:
  - "mongo/db/serverless/tenant_split_state_machine.idl"
  - "mongo/idl/basic_types.idl"

structs:
    DonorStartSplitResponse:
        description: "Response for the `donorStartSplit` command."
        strict: false
        fields:
            state:
                type: TenantSplitDonorState
                description: "The state of the tenant split operation."
            abortReason:
                type: object
                description: "The error that caused the tenant split operation to abort."
                optional: true

commands:
  donorStartSplit:
    description: "Parser for the `donorStartSplit` command."
    command_name: donorStartSplit
    strict: true
    namespace: ignored
    api_version: ""
    fields:
      migrationId:
        description: "Unique identifier for the tenant split operation."
        type: uuid
      recipientConnectionString:
        description: "The connection string for the recipient slice."
        type: string
        validator:
          callback: "tenant_migration_util::validateConnectionString"
      tenantId:
        description: "The identifier for the tenant being migrated."
        type: string
        validator:
          callback: "tenant_migration_util::validateDatabasePrefix"

  donorForgetSplit:
    description: "Parser for the `donorForgetSplit` command."
    command_name: donorForgetSplit
    strict: true
    namespace: ignored
    api_version: ""
    fields:
      migrationId:
        description: "Unique identifier for the tenant split operation."
        type: uuid

  donorAbortSplit:
    description: "Parser for the `donorAbortSplit` command."
    command_name: donorAbortSplit
    strict: true
    namespace: ignored
    api_version: ""
    fields:
      migrationId:
        description: "Unique identifier for the tenant split operation."
        type: uuid

feature_flags:
    featureFlagShardSplit:
        description: When enabled, multitenant migration can use the shard split commands.
        cpp_varname: feature_flags::gShardSplit
        default: false
