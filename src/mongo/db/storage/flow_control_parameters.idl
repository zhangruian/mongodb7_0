# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#
global:
    cpp_namespace: "mongo"

server_parameters:
    enableFlowControl:
        description: 'Enable flow control'
        set_at: [ startup, runtime ]
        cpp_vartype: 'AtomicWord<bool>'
        cpp_varname: 'gFlowControlEnabled'
        default: false
    flowControlTargetLagSeconds:
        description: 'Target maximum majority committed lag with flow control enabled'
        set_at: [ startup, runtime ]
        cpp_vartype: 'AtomicWord<std::int32_t>'
        cpp_varname: 'gFlowControlTargetLagSeconds'
        default: 10
        validator: { gt: 0 }
    flowControlThresholdLagPercentage:
        description: 'Threshold percentage of target lag where flow control will become engaged'
        set_at: [ startup, runtime ]
        cpp_vartype: 'AtomicWord<double>'
        cpp_varname: 'gFlowControlThresholdLagPercentage'
        default: 0.5
        validator: { gte: 0.0, lte: 1.0 }
    flowControlMaxSamples:
        description: 'The maximum number of samples the flow control algorithm will hold onto.'
        set_at: [ startup ]
        cpp_vartype: 'int'
        cpp_varname: 'gFlowControlMaxSamples'
        default: 1000000
        validator: { gt: 0 }
    flowControlSamplePeriod:
        description: 'How often flow control samples optimes. Smaller periods have higher resolution, but will suffer degredation sooner in the event of commit point lag.'
        set_at: [ startup, runtime ]
        cpp_vartype: 'AtomicWord<int>'
        cpp_varname: 'gFlowControlSamplePeriod'
        default: 1000
        validator: { gt: 0 }
    flowControlMinTicketsPerSecond:
        description: 'The minimum number of tickets flow control will hand out per second. A smaller value will have better resolution on batch-write workloads, but may unintentionally delay system operations.'
        set_at: [ startup, runtime ]
        cpp_vartype: 'AtomicWord<int>'
        cpp_varname: 'gFlowControlMinTicketsPerSecond'
        default: 100
        validator: { gte: 0 }
