# Golden test output of ABTPlanGeneration/LowerHashJoinNode

==== VARIATION: Hash join with one equality ====
-- INPUT:
HashJoin [joinType: Inner]
|   |   Condition
|   |       otherID = ID
|   Evaluation [{ID}]
|   |   FunctionCall [getField]
|   |   |   Const ["id"]
|   |   Variable [scan1]
|   PhysicalScan [{'<root>': scan1}, otherColl]
Evaluation [{otherID}]
|   FunctionCall [getField]
|   |   Const ["other_id"]
|   Variable [scan0]
PhysicalScan [{'<root>': scan0}, collName]

-- OUTPUT:
[4] hj 
    left [s4] [] 
        [3] project [s4 = getField(s3, "id")] 
        [2] scan s3 none none none none none [] @"<collUUID>" true false 
    right [s2] [] 
        [1] project [s2 = getField(s1, "other_id")] 
        [0] scan s1 none none none none none [] @"<collUUID>" true false 


==== VARIATION: Hash join with two equalities ====
-- INPUT:
HashJoin [joinType: Inner]
|   |   Condition
|   |       proj0 = proj2
|   |       proj1 = proj3
|   Evaluation [{proj3}]
|   |   FunctionCall [getField]
|   |   |   Const ["state_id"]
|   |   Variable [scan1]
|   Evaluation [{proj2}]
|   |   FunctionCall [getField]
|   |   |   Const ["cityField"]
|   |   Variable [scan1]
|   PhysicalScan [{'<root>': scan1}, otherColl]
Evaluation [{proj1}]
|   FunctionCall [getField]
|   |   Const ["state"]
|   Variable [scan0]
Evaluation [{proj0}]
|   FunctionCall [getField]
|   |   Const ["city"]
|   Variable [scan0]
PhysicalScan [{'<root>': scan0}, collName]

-- OUTPUT:
[6] hj 
    left [s5, s6] [] 
        [5] project [s6 = getField(s4, "state_id")] 
        [4] project [s5 = getField(s4, "cityField")] 
        [3] scan s4 none none none none none [] @"<collUUID>" true false 
    right [s2, s3] [] 
        [2] project [s3 = getField(s1, "state")] 
        [1] project [s2 = getField(s1, "city")] 
        [0] scan s1 none none none none none [] @"<collUUID>" true false 

