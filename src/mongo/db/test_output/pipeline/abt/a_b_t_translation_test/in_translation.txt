==== VARIATION: $match with $in, empty list ====
-- INPUTS:
pipeline: [{$match: {a: {$in: []}}}]
metadata: 
	number of partitions: 1
	scan definitions: 
		collection: 
			options: 
			distribution and paths: 
				distribution type: Centralized
				distribution paths: 
			indexes: 
			collection exists: 1
			CE type: -1

-- OUTPUT:
Root [{scan_0}]
Filter []
|   EvalFilter []
|   |   Variable [scan_0]
|   PathConstant []
|   Const [false]
Scan [collection, {scan_0}]


==== VARIATION: match with $in, singleton list ====
-- INPUTS:
pipeline: [{$match: {a: {$in: [1]}}}]
metadata: 
	number of partitions: 1
	scan definitions: 
		collection: 
			options: 
			distribution and paths: 
				distribution type: Centralized
				distribution paths: 
			indexes: 
			collection exists: 1
			CE type: -1

-- OUTPUT:
Root [{scan_0}]
Filter []
|   EvalFilter []
|   |   Variable [scan_0]
|   PathGet [a]
|   PathTraverse [1]
|   PathCompare [Eq]
|   Const [1]
Scan [collection, {scan_0}]


==== VARIATION: $match with $in and a list of equalities becomes a comparison to an EqMember list. ====
-- INPUTS:
pipeline: [{$match: {a: {$in: [1, 2, 3]}}}]
metadata: 
	number of partitions: 1
	scan definitions: 
		collection: 
			options: 
			distribution and paths: 
				distribution type: Centralized
				distribution paths: 
			indexes: 
			collection exists: 1
			CE type: -1

-- OUTPUT:
Root [{scan_0}]
Filter []
|   EvalFilter []
|   |   Variable [scan_0]
|   PathGet [a]
|   PathTraverse [1]
|   PathCompare [EqMember]
|   Const [[1, 2, 3]]
Scan [collection, {scan_0}]


==== VARIATION: match with $in over an array, duplicated equalities removed ====
-- INPUTS:
pipeline: [{$match: {a: {$in: ['abc', 'def', 'ghi', 'def']}}}]
metadata: 
	number of partitions: 1
	scan definitions: 
		collection: 
			options: 
			distribution and paths: 
				distribution type: Centralized
				distribution paths: 
			indexes: 
			collection exists: 1
			CE type: -1

-- OUTPUT:
Root [{scan_0}]
Filter []
|   EvalFilter []
|   |   Variable [scan_0]
|   PathGet [a]
|   PathTraverse [1]
|   PathCompare [EqMember]
|   Const [["abc", "def", "ghi"]]
Scan [collection, {scan_0}]


