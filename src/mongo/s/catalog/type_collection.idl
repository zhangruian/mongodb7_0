# Copyright (C) 2020-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/idl/basic_types.idl"
    - "mongo/db/keypattern.idl"
    - "mongo/s/chunk_version.idl"
    - "mongo/s/resharding/type_collection_fields.idl"
    - "mongo/s/type_collection_common_types.idl"

enums:
    DefragmentationPhase:
        description: "The list of phases composing the Collection Chunks Defragmentation Algorithm"
        type: string
        values:
            kMergeChunks : "mergeChunks"
            kMoveAndMergeChunks: "moveAndMergeChunks"
            kSplitChunks: "splitChunks"
            kFinished: "finished"

structs:
    CollectionTypeBase:
        description: "Represents the layout and contents of documents contained in the config 
                      server's config.collections collection."
        strict: false
        fields:
            _id:
                cpp_name: nss
                type: namespacestring
                description: "The full namespace (with the database prefix)."
                optional: false
            lastmodEpoch:
                cpp_name: pre22CompatibleEpoch
                type: objectid
                description: "Uniquely identifies this incarnation of the collection. Only changes
                              in case of drop and create, or shard key refine.

                              It is optional for parsing purposes, because in versions of MongoDB
                              prior to 2.2, this value wasn't being written. In such cases, it will
                              default to an all-zero OID."
                optional: true
            lastmod:
                cpp_name: updatedAt
                type: date
                description: "Contains the time of when the collection was either created."
                optional: false
            timestamp:
                type: timestamp
                description: "Uniquely identifies this incarnation of the collection. Only changes
                              in case of drop and create, or shard key refine.
                              This field will store the ClusterTime of the Config Server when the
                              collection was created or it's shard key last refined. Because
                              timestamps are comparable, we are able to define a total order in time
                              in the collection. This field will replace Epoch, which are not
                              comparable."
            uuid:
                cpp_name: pre50CompatibleUuid
                type: uuid
                description: "The UUID that will be used to create the local collection on each of
                              the shards which have chunks.

                              It is optional for parsing purposes, because in versions of MongoDB
                              prior to 5.0, this value would be missing for entries where 'dropped'
                              is set to true, because dropped collections' entries were being
                              written as dropped with certain fields missing instead of deleted."
                optional: true
            key:
                cpp_name: pre50CompatibleKeyPattern
                type: KeyPattern
                description: "The shard key pattern for the collection.

                              It is optional for parsing purposes, because in versions of MongoDB
                              prior to 5.0, this value would be missing for entries where 'dropped'
                              is set to true, because dropped collections' entries were being
                              written as dropped with certain fields missing instead of deleted."
                optional: true
            defaultCollation:
                cpp_name: pre50CompatibleDefaultCollation
                type: object_owned
                description: "Optional collection default collation. If missing or set to the empty
                              BSON, implies simple collation.

                              It is optional for serialisation purposes, because in versions of
                              MongoDB prior to 5.0, this value must be missing for the default
                              (empty BSON) collation."
                optional: true
            unique:
                type: bool
                description: "Uniqueness of the sharding key."
                default: false
            maxChunkSizeBytes: 
                type: safeInt64
                description: "Max chunk size in bytes."
                optional: true
            balancerShouldMergeChunks: 
                type: bool
                description: "Balancer will merge chunks up to the configured maxChunkSizeBytes."
                optional: true
            noAutoSplit: 
                type: bool
                description: "Specifies whether the auto-splitter should be running or not for this collection."
                optional: true
            defragmentationPhase:
                type: DefragmentationPhase
                description: "When the balancer is performing defragmentation on the collection,
                              stores the ID of the currently active phase of the process."
                optional: true
            noBalance:
                type: bool
                description: "Consulted by the Balancer only and indicates whether this collection
                              should be considered for balancing or not."
                default: false
            reshardingFields:
                type: TypeCollectionReshardingFields
                description: "Resharding-related fields. Only set when this collection is either the
                              original collection undergoing a resharding operation or this
                              collection is the temporary resharding collection."
                optional: true
            allowMigrations:
                cpp_name: pre50CompatibleAllowMigrations
                type: bool
                description: "Whether this collection allows chunks to move. It is required by
                              almost all DDL operations in order to guarantee that the set of
                              shards, which comprise a collection will not change.

                              If the flag is not present it defaults to true.

                              It is optional for serialisation purposes, because in versions of
                              MongoDB prior to 5.0, this value would be missing."
                optional: true
            timeseriesFields:
                type: TypeCollectionTimeseriesFields
                description: "Time-series collection fields. Only set when this is a time-series
                              buckets collection."
                optional: true
            supportingLongName:
                type: SupportingLongNameStatus
                description: "When set, the maximum name length of sharded collections is aligned
                              with that of non-sharded collections, which is 255 bytes from MongoDB
                              version 4.4 and 120 bytes with earlier versions. Otherwise, the limit
                              for shared collections is reduced by 20 bytes, regardless of the
                              version of MongoDB.

                              With version 5.1, the support for long names is implicitly enabled on
                              all collections by upgrading the feature compatibility version (FCV).
                              With FCV lower than 5.1 but using binaries supporting the feature,
                              the support for long names is disabled by default and requires an
                              explicit enabling on the specific collection. Otherwise, the feature
                              cannot be enabled in any way as unsupported by the binaries.

                              From a technical perspective, enabling the feature, the
                              system.cache.chunks.<NS> collections are created or renamed using the
                              sharded collection UUID, instead of the namespace, as part of their
                              names, i.e., system.cache.chunks.<UUID>."
                optional: true
# TODO SERVER-61033: merge this flag with allowMigrations.
            permitMigrations:
                type: bool
                description: "DEPRECATED flag that determines wether this collection allows chunks to
                               move. This will only prevent migration from committing and new balancer
                               rounds, this flag will not be loaded by shards."
                optional: true
