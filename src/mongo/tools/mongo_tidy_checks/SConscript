Import('env')

import os
import pathlib
from buildscripts.toolchains import DEFAULT_DATA_FILE, ToolchainConfig, ToolchainPlatform

try:
    toolchain_config = ToolchainConfig(DEFAULT_DATA_FILE, ToolchainPlatform('default'))
    symlink_path = str(
        toolchain_config.base_path / toolchain_config.aliases['stable'] / 'bin' / 'clang-tidy')
    # using os.readlink because pathlib readlink not support on python 3.7
    base_path = pathlib.Path(os.readlink(symlink_path)).resolve().parent.parent
except FileNotFoundError:
    Return()

tidy_include = base_path / 'include'
tidy_lib = base_path / 'lib'

env = env.Clone()

# TODO SERVER-72147
# This config was ripped from the toolchain build because our standard build config produced
# mismatched ABI, as well as using z,defs which will not work in this situation, so I am not
# sure what flags were specifically responsible and I just swapped them all. The toolchain build
# should test the check module so that if the configuration of clang-tidy changes there it would
# catch any issues here.
env['CPPPATH'] = [str(tidy_include)]
env['LIBPATH'] = []
env['CCFLAGS'] = [
    '-DGTEST_HAS_RTTI=0',
    '-D_GNU_SOURCE',
    '-D__STDC_CONSTANT_MACROS',
    '-D__STDC_FORMAT_MACROS',
    '-D__STDC_LIMIT_MACROS',
    '-fPIC',
    '-fvisibility-inlines-hidden',
    '-Werror=date-time',
    '-Wall',
    '-Wextra',
    '-Wno-unused-parameter',
    '-Wwrite-strings',
    '-Wcast-qual',
    '-Wno-missing-field-initializers',
    '-pedantic',
    '-Wno-long-long',
    '-Wimplicit-fallthrough',
    '-Wno-maybe-uninitialized',
    '-Wno-class-memaccess',
    '-Wno-redundant-move',
    '-Wno-noexcept-type',
    '-Wdelete-non-virtual-dtor',
    '-Wsuggest-override',
    '-Wno-comment',
    '-fdiagnostics-color',
    '-ffunction-sections',
    '-fdata-sections',
    '-fno-common',
    '-Woverloaded-virtual',
    '-fno-strict-aliasing',
    '-O3',
    '-DNDEBUG',
    '-fPIC',
    '-fno-exceptions',
    '-fno-rtti',
    '-std=c++17',
]
env['LINKFLAGS'] = []
env['SHLINKFLAGS'] = [
    '-fPIC',
    '-fvisibility-inlines-hidden',
    '-Werror=date-time',
    '-Wall',
    '-Wextra',
    '-Wno-unused-parameter',
    '-Wwrite-strings',
    '-Wcast-qual',
    '-Wno-missing-field-initializers',
    '-pedantic',
    '-Wno-long-long',
    '-Wimplicit-fallthrough',
    '-Wno-maybe-uninitialized',
    '-Wno-class-memaccess',
    '-Wno-redundant-move',
    '-Wno-noexcept-type',
    '-Wdelete-non-virtual-dtor',
    '-Wsuggest-override',
    '-Wno-comment',
    '-fdiagnostics-color',
    '-ffunction-sections',
    '-fdata-sections',
    '-fno-common',
    '-Woverloaded-virtual',
    '-fno-strict-aliasing',
    '-O3',
    '-DNDEBUG',
    '-Wl,-z,nodelete',
    f'-Wl,-rpath-link,{tidy_lib}',
    '-Wl,-O3',
    '-Wl,--gc-sections',
    '-shared',
    r'-Wl,-rpath,"\$$ORIGIN/../lib"',
]
env['CXXFLAGS'] = []
env['CFLAGS'] = []
env['FORCEINCLUDES'] = []
env['LIBDEPS_TAG_EXPANSIONS'] = []

mongo_custom_check = env.SharedLibrary(
    target="mongo_tidy_checks",
    source=[
        "MongoTestCheck.cpp",
    ],
    LIBDEPS_NO_INHERIT=[
        '$BUILD_DIR/third_party/shim_allocator',
    ],
    AIB_COMPONENT='mongo-tidy-checks',
)

pretty_printer_test_installed = env.AutoInstall(
    target='$PREFIX_LIBDIR',
    source=mongo_custom_check,
    AIB_ROLE='runtime',
    AIB_COMPONENT='mongo-tidy-checks',
)
