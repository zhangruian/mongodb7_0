Import("env")

env = env.Clone()

env.InjectThirdParty(libraries=['abseil-cpp'])

if env.ToolchainIs('msvc'):
    env.Append(
        CPPDEFINES=[
            'NOMINMAX',
        ],
        CCFLAGS=[],
    )

env.Library(target='absl_strerror', source=[
    'abseil-cpp/absl/base/internal/strerror.cc',
], LIBDEPS=[])

env.Library(target='absl_scoped_set_env', source=[
    'abseil-cpp/absl/base/internal/scoped_set_env.cc',
], LIBDEPS=[
    'absl_log_severity',
    'absl_raw_logging_internal',
])

env.Library(target='absl_periodic_sampler', source=[
    'abseil-cpp/absl/base/internal/periodic_sampler.cc',
], LIBDEPS=[
    'absl_exponential_biased',
])

env.Library(target='absl_spinlock_wait', source=[
    'abseil-cpp/absl/base/internal/spinlock_wait.cc',
], LIBDEPS=[])

env.Library(target='absl_log_severity', source=[
    'abseil-cpp/absl/base/log_severity.cc',
], LIBDEPS=[])

env.Library(target='absl_raw_logging_internal', source=[
    'abseil-cpp/absl/base/internal/raw_logging.cc',
], LIBDEPS=[
    'absl_log_severity',
])

env.Library(target='absl_exponential_biased', source=[
    'abseil-cpp/absl/base/internal/exponential_biased.cc',
], LIBDEPS=[])

env.Library(
    target='absl_malloc_internal', source=[
        'abseil-cpp/absl/base/internal/low_level_alloc.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ])

env.Library(target='absl_throw_delegate', source=[
    'abseil-cpp/absl/base/internal/throw_delegate.cc',
], LIBDEPS=[
    'absl_log_severity',
    'absl_raw_logging_internal',
])

env.Library(
    target='absl_base', source=[
        'abseil-cpp/absl/base/internal/cycleclock.cc',
        'abseil-cpp/absl/base/internal/spinlock.cc',
        'abseil-cpp/absl/base/internal/sysinfo.cc',
        'abseil-cpp/absl/base/internal/thread_identity.cc',
        'abseil-cpp/absl/base/internal/unscaledcycleclock.cc',
    ], LIBDEPS=[
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ])

env.Library(
    target='absl_raw_hash_set', source=[
        'abseil-cpp/absl/container/internal/raw_hash_set.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_graphcycles_internal',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ])

env.Library(
    target='absl_hashtablez_sampler', source=[
        'abseil-cpp/absl/container/internal/hashtablez_sampler.cc',
        'abseil-cpp/absl/container/internal/hashtablez_sampler_force_weak_definition.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ])

env.Library(target='absl_stacktrace', source=[
    'abseil-cpp/absl/debugging/stacktrace.cc',
], LIBDEPS=[
    'absl_debugging_internal',
    'absl_log_severity',
    'absl_raw_logging_internal',
])

env.Library(
    target='absl_examine_stack', source=[
        'abseil-cpp/absl/debugging/internal/examine_stack.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_throw_delegate',
    ])

env.Library(
    target='absl_symbolize', source=[
        'abseil-cpp/absl/debugging/symbolize.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ])

env.Library(
    target='absl_demangle_internal', source=[
        'abseil-cpp/absl/debugging/internal/demangle.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ])

env.Library(target='absl_leak_check', source=[
    'abseil-cpp/absl/debugging/leak_check.cc',
], LIBDEPS=[])

env.Library(
    target='absl_debugging_internal', source=[
        'abseil-cpp/absl/debugging/internal/address_is_readable.cc',
        'abseil-cpp/absl/debugging/internal/elf_mem_image.cc',
        'abseil-cpp/absl/debugging/internal/vdso_support.cc',
    ], LIBDEPS=[
        'absl_log_severity',
        'absl_raw_logging_internal',
    ])

env.Library(target='absl_leak_check_disable', source=[
    'abseil-cpp/absl/debugging/leak_check_disable.cc',
], LIBDEPS=[])

env.Library(
    target='absl_failure_signal_handler', source=[
        'abseil-cpp/absl/debugging/failure_signal_handler.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_examine_stack',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_throw_delegate',
    ])

env.Library(
    target='absl_flags_config', source=[
        'abseil-cpp/absl/flags/usage_config.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_flags_program_name',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ])

env.Library(
    target='absl_flags_marshalling', source=[
        'abseil-cpp/absl/flags/marshalling.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_str_format_internal',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ])

env.Library(
    target='absl_flags', source=[
        'abseil-cpp/absl/flags/flag.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_cord',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_internal',
        'absl_flags_marshalling',
        'absl_flags_private_handle_accessor',
        'absl_flags_program_name',
        'absl_flags_reflection',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_hash_set',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
        'absl_wyhash',
    ])

env.Library(
    target='absl_flags_private_handle_accessor', source=[
        'abseil-cpp/absl/flags/internal/private_handle_accessor.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ])

env.Library(target='absl_flags_commandlineflag_internal', source=[
    'abseil-cpp/absl/flags/internal/commandlineflag.cc',
], LIBDEPS=[])

env.Library(
    target='absl_flags_commandlineflag', source=[
        'abseil-cpp/absl/flags/commandlineflag.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_flags_commandlineflag_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ])

env.Library(
    target='absl_flags_program_name', source=[
        'abseil-cpp/absl/flags/internal/program_name.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ])

env.Library(
    target='absl_flags_reflection', source=[
        'abseil-cpp/absl/flags/reflection.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_cord',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_private_handle_accessor',
        'absl_flags_program_name',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_hash_set',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
        'absl_wyhash',
    ])

env.Library(
    target='absl_flags_internal', source=[
        'abseil-cpp/absl/flags/internal/flag.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_marshalling',
        'absl_flags_program_name',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ])

env.Library(
    target='absl_flags_usage', source=[
        'abseil-cpp/absl/flags/usage.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_cord',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_flags',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_internal',
        'absl_flags_marshalling',
        'absl_flags_private_handle_accessor',
        'absl_flags_program_name',
        'absl_flags_reflection',
        'absl_flags_usage_internal',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_hash_set',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
        'absl_wyhash',
    ])

env.Library(
    target='absl_flags_usage_internal', source=[
        'abseil-cpp/absl/flags/internal/usage.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_cord',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_flags',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_internal',
        'absl_flags_marshalling',
        'absl_flags_private_handle_accessor',
        'absl_flags_program_name',
        'absl_flags_reflection',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_hash_set',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
        'absl_wyhash',
    ])

env.Library(
    target='absl_flags_parse', source=[
        'abseil-cpp/absl/flags/parse.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_cord',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_flags',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_internal',
        'absl_flags_marshalling',
        'absl_flags_private_handle_accessor',
        'absl_flags_program_name',
        'absl_flags_reflection',
        'absl_flags_usage',
        'absl_flags_usage_internal',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_hash_set',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
        'absl_wyhash',
    ])

env.Library(
    target='absl_wyhash', source=[
        'abseil-cpp/absl/hash/internal/wyhash.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ])

env.Library(
    target='absl_city', source=[
        'abseil-cpp/absl/hash/internal/city.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ])

env.Library(
    target='absl_hash', source=[
        'abseil-cpp/absl/hash/internal/hash.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
        'absl_wyhash',
    ])

env.Library(target='absl_int128', source=[
    'abseil-cpp/absl/numeric/int128.cc',
], LIBDEPS=[])

env.Library(target='absl_random_internal_randen_hwaes', source=[
    'abseil-cpp/absl/random/internal/randen_detect.cc',
], LIBDEPS=[
    'absl_random_internal_platform',
    'absl_random_internal_randen_hwaes_impl',
])

env.Library(
    target='absl_random_internal_seed_material', source=[
        'abseil-cpp/absl/random/internal/seed_material.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ])

env.Library(target='absl_random_internal_randen_slow', source=[
    'abseil-cpp/absl/random/internal/randen_slow.cc',
], LIBDEPS=[
    'absl_random_internal_platform',
])

env.Library(target='absl_random_seed_gen_exception', source=[
    'abseil-cpp/absl/random/seed_gen_exception.cc',
], LIBDEPS=[])

env.Library(
    target='absl_random_internal_pool_urbg', source=[
        'abseil-cpp/absl/random/internal/pool_urbg.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_random_internal_platform',
        'absl_random_internal_randen',
        'absl_random_internal_randen_hwaes',
        'absl_random_internal_randen_hwaes_impl',
        'absl_random_internal_randen_slow',
        'absl_random_internal_seed_material',
        'absl_random_seed_gen_exception',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ])

env.Library(
    target='absl_random_distributions', source=[
        'abseil-cpp/absl/random/discrete_distribution.cc',
        'abseil-cpp/absl/random/gaussian_distribution.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ])

env.Library(target='absl_random_internal_randen_hwaes_impl', source=[
    'abseil-cpp/absl/random/internal/randen_hwaes.cc',
], LIBDEPS=[
    'absl_random_internal_platform',
])

env.Library(
    target='absl_random_seed_sequences', source=[
        'abseil-cpp/absl/random/seed_sequences.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_random_internal_platform',
        'absl_random_internal_pool_urbg',
        'absl_random_internal_randen',
        'absl_random_internal_randen_hwaes',
        'absl_random_internal_randen_hwaes_impl',
        'absl_random_internal_randen_slow',
        'absl_random_internal_seed_material',
        'absl_random_seed_gen_exception',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ])

env.Library(
    target='absl_random_internal_randen', source=[
        'abseil-cpp/absl/random/internal/randen.cc',
    ], LIBDEPS=[
        'absl_random_internal_platform',
        'absl_random_internal_randen_hwaes',
        'absl_random_internal_randen_hwaes_impl',
        'absl_random_internal_randen_slow',
    ])

env.Library(
    target='absl_random_internal_distribution_test_util', source=[
        'abseil-cpp/absl/random/internal/chi_square.cc',
        'abseil-cpp/absl/random/internal/distribution_test_util.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_str_format_internal',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ])

env.Library(target='absl_random_internal_platform', source=[
    'abseil-cpp/absl/random/internal/randen_round_keys.cc',
], LIBDEPS=[])

env.Library(
    target='absl_statusor', source=[
        'abseil-cpp/absl/status/statusor.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_cord',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_status',
        'absl_str_format_internal',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_throw_delegate',
    ])

env.Library(
    target='absl_status', source=[
        'abseil-cpp/absl/status/status.cc',
        'abseil-cpp/absl/status/status_payload_printer.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_cord',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_throw_delegate',
    ])

env.Library(
    target='absl_cord', source=[
        'abseil-cpp/absl/strings/cord.cc',
        'abseil-cpp/absl/strings/internal/cord_internal.cc',
        'abseil-cpp/absl/strings/internal/cord_rep_ring.cc',
    ], LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ])

env.Library(
    target='absl_str_format_internal', source=[
        'abseil-cpp/absl/strings/internal/str_format/arg.cc',
        'abseil-cpp/absl/strings/internal/str_format/bind.cc',
        'abseil-cpp/absl/strings/internal/str_format/extension.cc',
        'abseil-cpp/absl/strings/internal/str_format/float_conversion.cc',
        'abseil-cpp/absl/strings/internal/str_format/output.cc',
        'abseil-cpp/absl/strings/internal/str_format/parser.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ])

env.Library(
    target='absl_strings_internal', source=[
        'abseil-cpp/absl/strings/internal/ostringstream.cc',
        'abseil-cpp/absl/strings/internal/utf8.cc',
        'abseil-cpp/absl/strings/internal/escaping.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ])

absl_strings_env = env.Clone()

if env.GetOption('sanitize') and 'undefined' in env.GetOption('sanitize').split(','):
    # UBSAN causes the __muloti4 reference to be in the library. This is not defined in libgcc, so
    # we will just opt out of this check in this third party library. Related issues below:
    #
    # abseil issue showing the commit it was introduced
    # https://github.com/abseil/abseil-cpp/issues/841
    #
    # GCC bug saying the symbol is missing
    # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=103034
    #
    # LLVM bug saying the symbol requires extra linkage
    # https://bugs.llvm.org/show_bug.cgi?id=16404
    absl_strings_env.Append(
        CCFLAGS=[
            '-fno-sanitize=signed-integer-overflow',
        ],
        LINKFLAGS=[
            '-fno-sanitize=signed-integer-overflow',
        ],
    )

absl_strings_env.Library(
    target='absl_strings',
    source=[
        'abseil-cpp/absl/strings/ascii.cc',
        'abseil-cpp/absl/strings/charconv.cc',
        'abseil-cpp/absl/strings/escaping.cc',
        'abseil-cpp/absl/strings/internal/charconv_bigint.cc',
        'abseil-cpp/absl/strings/internal/charconv_parse.cc',
        'abseil-cpp/absl/strings/internal/memutil.cc',
        'abseil-cpp/absl/strings/match.cc',
        'abseil-cpp/absl/strings/numbers.cc',
        'abseil-cpp/absl/strings/str_cat.cc',
        'abseil-cpp/absl/strings/str_replace.cc',
        'abseil-cpp/absl/strings/str_split.cc',
        'abseil-cpp/absl/strings/string_view.cc',
        'abseil-cpp/absl/strings/substitute.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)

env.Library(
    target='absl_synchronization', source=[
        'abseil-cpp/absl/synchronization/barrier.cc',
        'abseil-cpp/absl/synchronization/blocking_counter.cc',
        'abseil-cpp/absl/synchronization/internal/create_thread_identity.cc',
        'abseil-cpp/absl/synchronization/internal/per_thread_sem.cc',
        'abseil-cpp/absl/synchronization/internal/waiter.cc',
        'abseil-cpp/absl/synchronization/notification.cc',
        'abseil-cpp/absl/synchronization/mutex.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ])

env.Library(
    target='absl_graphcycles_internal', source=[
        'abseil-cpp/absl/synchronization/internal/graphcycles.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ])

env.Library(
    target='absl_time_zone', source=[
        'abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.cc',
        'abseil-cpp/absl/time/internal/cctz/src/time_zone_format.cc',
        'abseil-cpp/absl/time/internal/cctz/src/time_zone_if.cc',
        'abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.cc',
        'abseil-cpp/absl/time/internal/cctz/src/time_zone_info.cc',
        'abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.cc',
        'abseil-cpp/absl/time/internal/cctz/src/time_zone_lookup.cc',
        'abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.cc',
        'abseil-cpp/absl/time/internal/cctz/src/zone_info_source.cc',
    ], LIBDEPS=[])

env.Library(target='absl_civil_time', source=[
    'abseil-cpp/absl/time/internal/cctz/src/civil_time_detail.cc',
], LIBDEPS=[])

env.Library(
    target='absl_time', source=[
        'abseil-cpp/absl/time/civil_time.cc',
        'abseil-cpp/absl/time/clock.cc',
        'abseil-cpp/absl/time/duration.cc',
        'abseil-cpp/absl/time/format.cc',
        'abseil-cpp/absl/time/time.cc',
    ], LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
        'absl_time_zone',
    ])

env.Library(target='absl_bad_any_cast_impl', source=[
    'abseil-cpp/absl/types/bad_any_cast.cc',
], LIBDEPS=[
    'absl_log_severity',
    'absl_raw_logging_internal',
])

env.Library(target='absl_bad_optional_access', source=[
    'abseil-cpp/absl/types/bad_optional_access.cc',
], LIBDEPS=[
    'absl_log_severity',
    'absl_raw_logging_internal',
])

env.Library(target='absl_bad_variant_access', source=[
    'abseil-cpp/absl/types/bad_variant_access.cc',
], LIBDEPS=[
    'absl_log_severity',
    'absl_raw_logging_internal',
])
